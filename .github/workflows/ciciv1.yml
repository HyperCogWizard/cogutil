name: CICI Workflow

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  CCACHE_DIR: /ws/ccache
  MAKEFLAGS: -j2

jobs:
  cogutil:
    name: CogUtil Job
    runs-on: ubuntu-latest
    container:
      image: opencog/opencog-deps
      options: --user root
      env:
        CCACHE_DIR: /ws/ccache
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Start restoring ccache
        run: date +%d-%m-%Y > /tmp/date

      - name: Restore ccache
        uses: actions/cache@v4
        with:
          path: /ws/ccache
          key: ccache-${{ hashFiles('/tmp/date') }}
          restore-keys: |
            ccache-

      - name: Set number of make jobs
        run: echo "MAKEFLAGS=-j2" >> $GITHUB_ENV

      - name: CMake Configure
        run: |
          mkdir build
          cd build
          cmake ..

      - name: Build
        run: |
          cd build
          make

      - name: Build tests
        run: |
          cd build
          make tests

      - name: Run tests
        run: |
          cd build
          make check ARGS="$MAKEFLAGS"

      - name: Print test log
        if: always()
        run: |
          cat build/tests/Testing/Temporary/LastTest.log

      - name: Upload cogutil artifact
        uses: actions/upload-artifact@v4
        with:
          name: cogutil
          path: /ws/cogutil

      - name: Upload ccache artifact
        uses: actions/upload-artifact@v4
        with:
          name: ccache
          path: /ws/ccache

#      - persist_to_workspace:
#          root: /ws/
#          paths:
#            - cogutil
#            - ccache

  atomspace:
    name: AtomSpace Job
    runs-on: ubuntu-latest
    container:
      image: opencog/opencog-deps
      options: --user root
      env:
        PGHOST: opencog-postgres
        PGUSER: opencog_test
        PGPASSWORD: cheese
        CCACHE_DIR: /ws/ccache
#      image: opencog/postgres
#      name: opencog-postgres

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Start restoring ccache
        run: date +%d-%m-%Y > /tmp/date

      - name: Restore ccache
        uses: actions/cache@v4
        with:
          path: /ws/ccache
          key: ccache-${{ hashFiles('/tmp/date') }}
          restore-keys: |
            ccache-

      - name: Set number of make jobs
        run: echo "MAKEFLAGS=-j2" >> $GITHUB_ENV

      - name: CMake Configure
        run: |
          mkdir build
          cd build
          cmake ..



  atomspace:
    name: AtomSpace Job
    runs-on: ubuntu-latest
    container:
      - image: opencog/opencog-deps
        user: root
        environment:
          PGHOST: opencog-postgres
          PGUSER: opencog_test
          PGPASSWORD: cheese
          CCACHE_DIR: /ws/ccache
      - image: opencog/postgres
        name: opencog-postgres
    working_directory: /ws/atomspace

    steps:
      - attach_workspace:
          at: /ws

      - name: Set number of make jobs
        run: |
          echo "export MAKEFLAGS=-j2" >> $BASH_ENV

      - name: Install CogUtil
        run: |
          cd /ws/cogutil/build
          make install
          ldconfig

      - name: Checkout AtomSpace
        run: |
          git clone --depth 1 https://github.com/opencog/atomspace .

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Start restoring ccache
        run: |
          date +%d-%m-%Y > /tmp/date

      - name: Restore GHC Cache
        uses: actions/cache@v4
        with:
          path: /ws/ghc
          key: ghc-{{checksum "/ws/atomspace/opencog/haskell/stack.yaml"}}-{{ arch }}
          restore-keys: |
            ghc-

      - name: Restore Haskell Deps Cache
        uses: actions/cache@v4
        with:
          path: /ws/haskelldeps
          key: haskelldeps-{{checksum "/ws/atomspace/opencog/haskell/stack.yaml"}}-{{checksum "/ws/atomspace/opencog/haskell/opencog-atomspace.cabal"}}-{{ arch }}
          restore-keys: |
            haskelldeps-

      - name: CMake Configure
        run: |
          mkdir build
          cd build
          cmake ..

      - name: Build
        run: |
          cd build
          make

      - name: Build tests
        run: |
          cd build
          make tests

      - name: Run tests
        run: |
          cd build
          make check ARGS="$MAKEFLAGS"

        # Run single-threaded to *maybe* help ParallelUTest not fail

      - name: Install AtomSpace
        run: |
          cd build
          make install
          ldconfig

      - name: Build tests
        run: |
          cd build
          make tests

      - name: Run tests
        run: |
          cd build
          make check ARGS="$MAKEFLAGS"

      - name: Print test log
        if: always()
        run: |
          cat build/tests/Testing/Temporary/LastTest.log

      - save_cache:
          name: Save GHC Cache
          key: ghc-{{checksum "/ws/atomspace/opencog/haskell/stack.yaml"}}-{{ arch }}
          paths:
            - /root/.stack

      - save_cache:
          name: Save Haskell Deps Cache
          key: haskelldeps-{{checksum "/ws/atomspace/opencog/haskell/stack.yaml"}}-{{checksum "/ws/atomspace/opencog/haskell/opencog-atomspace.cabal"}}-{{ arch }}
          paths:
            - /ws/atomspace/opencog/haskell/.stack-work

#      - persist_to_workspace:
#          root: /ws/
#          paths:
#            - atomspace
#            - ccache

  cogserver:
    name: CogServer Job
    runs-on: ubuntu-latest
    container:
      - image: opencog/opencog-deps
        user: root
        environment:
          CCACHE_DIR: /ws/ccache
    working_directory: /ws/cogserver
    steps:
      - attach_workspace:
          at: /ws

      - name: Set number of make jobs
        run: |
          echo "export MAKEFLAGS=-j2" >> $BASH_ENV

      - name: Install CogUtil
        run: |
          cd /ws/cogutil/build
          make -j2 install
          ldconfig

      - name: Install AtomSpace
        run: |
          cd /ws/atomspace/build
          make install
          ldconfig

      - name: Checkout CogServer
        run: |
          git clone --depth 1 https://github.com/opencog/cogserver .

      - name: CMake Configure
        run: |
          mkdir build
          cd build
          cmake ..

      - name: Build
        run: |
          cd build
          make

      - name: Build tests
        run: |
          cd build
          make tests

      - name: Run tests
        run: |
          cd build
          make check ARGS="$MAKEFLAGS"

      - name: Install CogServer
        run: |
          cd build
          make install
          ldconfig

      - name: Print test log
        if: always()
        run: |
          cat build/tests/Testing/Temporary/LastTest.log

#      - persist_to_workspace:
#          root: /ws/
#          paths:
#            - cogserver
#            - ccache

  attention:
    name: Attention Job
    runs-on: ubuntu-latest
    container:
      - image: opencog/opencog-deps
        user: root
        environment:
          CCACHE_DIR: /ws/ccache
    working_directory: /ws/attention

    steps:
      - attach_workspace:
          at: /ws

      - name: Set number of make jobs
        run: |
          echo "export MAKEFLAGS=-j2" >> $BASH_ENV

      - name: Install CogUtil
        run: |
          cd /ws/cogutil/build
          make install
          ldconfig

  #  steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Start restoring ccache
        run: |
          date +%d-%m-%Y > /tmp/date

      - name: Restore GHC Cache
        uses: actions/cache@v4
        with:
          path: /ws/ghc
          key: ghc-{{checksum "/ws/atomspace/opencog/haskell/stack.yaml"}}-{{ arch }}
          restore-keys: |
            ghc-

      - name: Restore Haskell Deps Cache
        uses: actions/cache@v4
        with:
          path: /ws/haskelldeps
          key: haskelldeps-{{checksum "/ws/atomspace/opencog/haskell/stack.yaml"}}-{{checksum "/ws/atomspace/opencog/haskell/opencog-atomspace.cabal"}}-{{ arch }}
          restore-keys: |
            haskelldeps-

      - name: Install AtomSpace
        run: |
          cd /ws/atomspace/build
          make install
          ldconfig

      - name: Install CogServer
        run: |
          cd /ws/cogserver/build
          make install
          ldconfig

      - name: Checkout Attention
        run: |
          git clone --depth 1 https://github.com/opencog/attention .

      - name: CMake Configure
        run: |
          mkdir build
          cd build
          cmake ..

      - name: Build
        run: |
          cd build
          make

      - name: Build tests
        run: |
          cd build
          make tests

      - name: Run tests
        run: |
          cd build
          make check ARGS="$MAKEFLAGS"

      - name: Install Attention
        run: |
          cd build
          make install
          ldconfig

      - name: Print test log
        if: always()
        run: |
          cat build/tests/Testing/Temporary/LastTest.log

#      - persist_to_workspace:
#          root: /ws/
#          paths:
#            - attention
#            - ccache

  unify:
    name: Unify Job
    runs-on: ubuntu-latest
    container:
      - image: opencog/opencog-deps
        user: root
        environment:
          CCACHE_DIR: /ws/ccache
    working_directory: /ws/unify

    steps:
      - attach_workspace:
          at: /ws

      - name: Set number of make jobs
        run: |
          echo "export MAKEFLAGS=-j2" >> $BASH_ENV

      - name: Install CogUtil
        run: |
          cd /ws/cogutil/build
          make install
          ldconfig

      - name: Install AtomSpace
        run: |
          cd /ws/atomspace/build
          make install
          ldconfig

      - name: Checkout Unify
        run: |
          git clone --depth 1 https://github.com/opencog/unify .

      - name: CMake Configure
        run: |
          mkdir build
          cd build
          cmake ..

      - name: Build
        run: |
          cd build
          make

      - name: Build tests
        run: |
          cd build
          make tests

      - name: Run tests
        run: |
          cd build
          make check ARGS="$MAKEFLAGS"

      - name: Install Unify
        run: |
          cd build
          make install
          ldconfig

      - name: Print test log
        if: always()
        run: |
          cat build/tests/Testing/Temporary/LastTest.log

#      - persist_to_workspace:
#          root: /ws/
#          paths:
#            - unify
#            # - ccache

  ure:
    name: URE Job
    runs-on: ubuntu-latest
    container:
      - image: opencog/opencog-deps
        user: root
        environment:
          CCACHE_DIR: /ws/ccache
    working_directory: /ws/ure

    steps:
      - attach_workspace:
          at: /ws

      - name: Set number of make jobs
        run: |
          echo "export MAKEFLAGS=-j2" >> $BASH_ENV

      - name: Install CogUtil
        run: |
          cd /ws/cogutil/build
          make install
          ldconfig

      - name: Install AtomSpace
        run: |
          cd /ws/atomspace/build
          make install
          ldconfig

      - name: Install Unify
        run: |
          cd /ws/unify/build
          make install
          ldconfig

      - name: Checkout URE
        run: |
          git clone --depth 1 https://github.com/opencog/ure .

      - name: CMake Configure
        run: |
          mkdir build
          cd build
          cmake ..

      - name: Build
        run: |
          cd build
          make

      - name: Build tests
        run: |
          cd build
          make tests

      - name: Run tests
        run: |
          cd build
          make check ARGS="$MAKEFLAGS"

      - name: Install URE
        run: |
          cd build
          make install
          ldconfig

      - name: Print test log
        if: always()
        run: |
          cat build/tests/Testing/Temporary/LastTest.log

#      - persist_to_workspace:
#          root: /ws/
#          paths:
#            - ure
#            # - ccache

  miner:
    name: Miner Job
    runs-on: ubuntu-latest
    container:
      - image: opencog/opencog-deps
        user: root
        environment:
          CCACHE_DIR: /ws/ccache
    working_directory: /ws/miner

    steps:
      - attach_workspace:
          at: /ws/

   # steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Start restoring ccache
        run: |
          date +%d-%m-%Y > /tmp/date

      - name: Restore GHC Cache
        uses: actions/cache@v4
        with:
          path: /ws/ghc
          key: ghc-{{checksum "/ws/atomspace/opencog/haskell/stack.yaml"}}-{{ arch }}
          restore-keys: |
            ghc-

      - name: Restore Haskell Deps Cache
        uses: actions/cache@v4
        with:
          path: /ws/haskelldeps
          key: haskelldeps-{{checksum "/ws/atomspace/opencog/haskell/stack.yaml"}}-{{checksum "/ws/atomspace/opencog/haskell/opencog-atomspace.cabal"}}-{{ arch }}
          restore-keys: |
            haskelldeps-

      - name: Set number of make jobs
        run: |
          echo "export MAKEFLAGS=-j2" >> $BASH_ENV

      - name: Install CogUtil
        run: |
          cd /ws/cogutil/build
          make install
          ldconfig

      - name: Install AtomSpace
        run: |
          cd /ws/atomspace/build
          make install
          ldconfig

      - name: Install Unify
        run: |
          cd /ws/unify/build
          make install
          ldconfig

      - name: Install URE
        run: |
          cd /ws/ure/build
          make install
          ldconfig

      - name: Checkout Miner
        run: |
          git clone --depth 1 https://github.com/opencog/miner .

      - name: CMake Configure
        run: |
          mkdir build
          cd build
          cmake ..

      - name: Build
        run: |
          cd build
          make

      - name: Build tests
        run: |
          cd build
          make tests

      - name: Run tests
        run: |
          cd build
          make check ARGS="$MAKEFLAGS"

      - name: Install Miner
        run: |
          cd build
          make install
          ldconfig

      - name: Print test log
        if: always()
        run: |
          cat build/tests/Testing/Temporary/LastTest.log

#      - persist_to_workspace:
#          root: /ws/
#          paths:
#            - miner
#            - ccache

  asmoses:
    name: ASMoses Job
    runs-on: ubuntu-latest
    container:
      - image: opencog/opencog-deps
        user: root
        environment:
          CCACHE_DIR: /ws/ccache
    working_directory: /ws/asmoses

    steps:
      - attach_workspace:
          at: /ws

      - name: Set number of make jobs
        run: |
          echo "export MAKEFLAGS=-j2" >> $BASH_ENV

      - name: Install CogUtil
        run: |
          cd /ws/cogutil/build
          make install
          ldconfig

      - name: Install AtomSpace
        run: |
          cd /ws/atomspace/build
          make install
          ldconfig

      - name: Install Unify
        run: |
          cd /ws/unify/build
          make install
          ldconfig

      - name: Install URE
        run: |
          cd /ws/ure/build
          make install
          ldconfig

      - name: Checkout AS-MOSES
        run: |
          git clone --depth 1 https://github.com/opencog/asmoses .

      - name: CMake Configure
        run: |
          mkdir build
          cd build
          cmake ..

      - name: Build
        run: |
          cd build
          make

      # Temporary fix: install asmoses to please the unit tests

      - name: Install
        run: |
          cd build
          make install

      - name: Build tests
        run: |
          cd build
          make tests

      - name: Run tests
        run: |
          cd build
          make check ARGS="$MAKEFLAGS"

      - name: Print test log
        if: always()
        run: |
          cat build/tests/Testing/Temporary/LastTest.log


  opencog:
    name: OpenCog Job
    runs-on: ubuntu-latest
    container:
      - image: opencog/opencog-deps
        user: root
        environment:
          CCACHE_DIR: /ws/ccache
    working_directory: /ws/opencog

    steps:
      - attach_workspace:
          at: /ws

   # steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Start restoring ccache
        run: |
          date +%d-%m-%Y > /tmp/date

      - name: Restore GHC Cache
        uses: actions/cache@v4
        with:
          path: /ws/ghc
          key: ghc-{{checksum "/ws/atomspace/opencog/haskell/stack.yaml"}}-{{ arch }}
          restore-keys: |
            ghc-

      - name: Restore Haskell Deps Cache
        uses: actions/cache@v4
        with:
          path: /ws/haskelldeps
          key: haskelldeps-{{checksum "/ws/atomspace/opencog/haskell/stack.yaml"}}-{{checksum "/ws/atomspace/opencog/haskell/opencog-atomspace.cabal"}}-{{ arch }}
          restore-keys: |
            haskelldeps-

      - name: Set number of make jobs
        run: |
          echo "export MAKEFLAGS=-j2" >> $BASH_ENV

      - name: Install CogUtil
        run: |
          cd /ws/cogutil/build
          make install
          ldconfig

      - name: Install AtomSpace
        run: |
          cd /ws/atomspace/build
          make install
          ldconfig

      - name: Install CogServer
        run: |
          cd /ws/cogserver/build
          make install
          ldconfig

      - name: Install Attention
        run: |
          cd /ws/attention/build
          make install
          ldconfig

      - name: Install Unify
        run: |
          cd /ws/unify/build
          make install
          ldconfig

      - name: Install URE
        run: |
          cd /ws/ure/build
          make install
          ldconfig

      - name: Install Link Grammar Atomese
        run: |
          git clone --depth 1 https://github.com/opencog/lg-atomese /ws/lg-atomese
          mkdir -p /ws/lg-atomese/build
          cd /ws/lg-atomese/build && cmake .. && make -j2 && make -j2 install
          ldconfig

      - name: Checkout OpenCog
        run: |
          git clone --depth 1 https://github.com/opencog/opencog .

      - name: CMake Configure
        run: |
          mkdir build
          cd build
          cmake ..

      - name: Build
        run: |
          cd build
          make

      - name: Build tests
        run: |
          cd build
          make tests

      - name: Run tests
        run: |
          cd build
          make check ARGS="$MAKEFLAGS"

      - name: Install OpenCog
        run: |
          cd build
          make install
          ldconfig

      - name: Print test log
        if: always()
        run: |
          cat build/tests/Testing/Temporary/LastTest.log

#      - persist_to_workspace:
#          root: /ws/
#          paths:
#            - opencog
#            - ccache

  package:
    name: Package Job
    runs-on: ubuntu-latest
    container:
      - image: opencog/opencog-deps
        user: root
    working_directory: /ws/cogutil

    steps:
      - attach_workspace:
          at: /ws/

      - name: Build Debian package
        run: |
          cd build
          make install
          make package

      - store_artifacts:
          path: build/packages/

      - name: Start storing ccache
        run: |
          date +%d-%m-%Y > /tmp/date

      - save_cache:
          key: ccache-{{ checksum "/tmp/date" }}
          paths:
            - /ws/ccache

workflows:
  version: 2
  build-test-package:
    jobs:
      - cogutil
      - atomspace:
          requires:
            - cogutil
      - cogserver:
          requires:
            - atomspace
      - attention:
          requires:
            - cogserver
      - unify:
          requires:
            - atomspace
      - ure:
          requires:
            - atomspace
            - unify
      - miner:
          requires:
            - ure
      - asmoses:
          requires:
            - cogutil
            - atomspace
            - ure
      - opencog:
          requires:
            - atomspace
            - ure
            - cogserver
            - attention
      - package:
          requires:
            - opencog
          filters:
            branches:
              only: master
